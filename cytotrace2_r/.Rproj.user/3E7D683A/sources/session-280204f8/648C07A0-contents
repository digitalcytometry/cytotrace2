

# Replace 'your_file.h5' with the path to your actual file
donor1 <- loadData("../newmanlab/Cytotrace 2/donor1.tsv")
donor2 <- loadData("donor2.tsv")
donor3 <- loadData("donor3.tsv")


# convert gene symbols
library(AnnotationDbi)
library(org.Hs.eg.db)

# donor 1
donor11 <- donor1[1:(length(colnames(donor1))-6)]
ensembl_ids <- colnames(donor11)

# Convert Ensembl IDs to NCBI gene symbols
gene_symbols <- mapIds(org.Hs.eg.db,
                       keys = ensembl_ids,
                       column = "SYMBOL",
                       keytype = "ENSEMBL",
                       multiVals = "first")

gene_symbols[is.na(gene_symbols)] <- "NOTFOUND"

colnames(donor11) <- gene_symbols

donor11 <- donor11[, -(grep("NOTFOUND", colnames(donor11)))]

# Convert the transposed matrix back to a DataFrame and preserve names
donor11_df <- as.data.frame(t(donor11), stringsAsFactors = FALSE) # Convert to DataFrame
colnames(donor11_df) <- rownames(donor11) # Set column names
rownames(donor11_df) <- colnames(donor11) # Set row names

# donr11_df_subset <- donor11_df[,1:2000]
species = "human"
is_seurat = FALSE
full_model = FALSE
batch_size = 5000
smooth_batch_size = 1000
parallelize_models = TRUE
parallelize_smoothing = TRUE
ncores = NULL
max_pcs = 200
seed = 14

ct2_donor1 <- cytotrace2(donor11_df, species = "human",
                         is_seurat = FALSE,
                         full_model = FALSE,
                         batch_size = 5000,
                         smooth_batch_size = 1000,
                         parallelize_models = TRUE,
                         parallelize_smoothing = TRUE,
                         ncores = NULL,
                         max_pcs = 200,
                         seed = 14)



# donor 2
donor22 <- donor2[1:(length(colnames(donor2))-6)]
ensembl_ids <- colnames(donor22)

# Convert Ensembl IDs to NCBI gene symbols
gene_symbols <- mapIds(org.Hs.eg.db,
                       keys = ensembl_ids,
                       column = "SYMBOL",
                       keytype = "ENSEMBL",
                       multiVals = "first")

gene_symbols[is.na(gene_symbols)] <- "NOTFOUND"

colnames(donor22) <- gene_symbols

donor22 <- donor22[, -(grep("NOTFOUND", colnames(donor22)))]

# Convert the transposed matrix back to a DataFrame and preserve names
donor22_df <- as.data.frame(t(donor22), stringsAsFactors = FALSE) # Convert to DataFrame
colnames(donor22_df) <- rownames(donor22) # Set column names
rownames(donor22_df) <- colnames(donor22) # Set row names

ct2_donor2 <- cytotrace2(donor22_df, species = "human",
                         isSeurat = FALSE,
                         full_model = TRUE,
                         batch_size = 10000,
                         smooth_batch_size = 1000,
                         parallelize_models = TRUE,
                         parallelize_smoothing = TRUE,
                         ncores = NULL,
                         max_pcs = 200,
                         seed = 14)


# donor 3

donor33 <- donor3[1:(length(colnames(donor3))-6)]
ensembl_ids <- colnames(donor33)

# Convert Ensembl IDs to NCBI gene symbols
gene_symbols <- mapIds(org.Hs.eg.db,
                       keys = ensembl_ids,
                       column = "SYMBOL",
                       keytype = "ENSEMBL",
                       multiVals = "first")

gene_symbols[is.na(gene_symbols)] <- "NOTFOUND"

colnames(donor33) <- gene_symbols

donor33 <- donor33[, -(grep("NOTFOUND", colnames(donor33)))]

# Convert the transposed matrix back to a DataFrame and preserve names
donor33_df <- as.data.frame(t(donor33), stringsAsFactors = FALSE) # Convert to DataFrame
colnames(donor33_df) <- rownames(donor33) # Set column names
rownames(donor33_df) <- colnames(donor33) # Set row names

ct2_donor3 <- cytotrace2(donor33_df, species = "human",
                         isSeurat = FALSE,
                         full_model = TRUE,
                         batch_size = 10000,
                         smooth_batch_size = 1000,
                         parallelize_models = TRUE,
                         parallelize_smoothing = TRUE,
                         ncores = NULL,
                         max_pcs = 200,
                         seed = 14)


results <- list("donor 1" = ct2_donor1$CytoTRACE2Prediction,
                "donor 2" = ct2_donor2$CytoTRACE2Prediction,
                "donor 3" = ct2_donor3$CytoTRACE2Prediction,
                "all_donors" = results_all,
                "annotation 1" = d1_ann,
                "annotation 2" = d2_ann,
                "annotation 3" = d3_ann,
                 "all_annotation" = annotation)

saveRDS(results, "GSE109774_ct2_results.rds")

saveRDS(c(ct2_donor1, ct2_donor2, ct2_donor3), "GSE109774_ct2_objects.rds")


annotation <- read.csv("GSE185224_annotation.csv", row.names = 1)

merged <- merge(ct2_donor1$CytoTRACE2Prediction, d1_ann, by = "row.names")


p1 <- ggplot(merged) +
  geom_boxplot(aes(x = type, y = Potency.Score)) +
  xlab("Cell type") +
  ylab("Potency score") +
  ggtitle("Donor 1") +
  theme_classic()

p2 <- ggplot(merged) +
  geom_boxplot(aes(x = type, y = Raw.Potency.Score)) +
  xlab("Cell type") +
  ylab("Raw Potency score") +
  ggtitle("Donor 1") +
  theme_classic()

merged <- merge(ct2_donor2$CytoTRACE2Prediction, d2_ann, by = "row.names")


p3 <- ggplot(merged) +
  geom_boxplot(aes(x = type, y = Potency.Score)) +
  xlab("Cell type") +
  ylab("Potency score") +
  ggtitle("Donor 2") +
  theme_classic()

p4 <- ggplot(merged) +
  geom_boxplot(aes(x = type, y = Raw.Potency.Score)) +
  xlab("Cell type") +
  ylab("Raw Potency score") +
  ggtitle("Donor 2") +
  theme_classic()



merged <- merge(ct2_donor3$CytoTRACE2Prediction, d3_ann, by = "row.names")


p5 <- ggplot(merged) +
  geom_boxplot(aes(x = type, y = Potency.Score)) +
  xlab("Cell type") +
  ylab("Potency score") +
  ggtitle("Donor 3") +
  theme_classic()

p6 <- ggplot(merged) +
  geom_boxplot(aes(x = type, y = Raw.Potency.Score)) +
  xlab("Cell type") +
  ylab("Raw Potency score") +
  ggtitle("Donor 3") +
  theme_classic()


plot_grid <- p2 + p1 +  p4 + p3 + p6 + p5 +
  plot_layout(ncol = 2, nrow = 3) # Specify 2 columns and 3 rows

plot_grid

library(Matrix)
library(irlba)

ct2 <- readRDS("../newmanlab/Cytotrace 2/GSE109774_ct2_objects.rds")
ct2_results <- readRDS("../newmanlab/Cytotrace 2/GSE109774_ct2_results.rds")

ct2_donor1 <- ct2[1:2]
ct2_donor2 <- ct2[3:4]
ct2_donor3 <- ct2[5:6]


plots1 <- plotData(cytotrace2 = ct2_donor1, data = donor11_df, annotation = ct2_results$`annotation 1`["type"], is_seurat = FALSE, pc_dims = 30)

plots2 <- plotData(ct2_donor2, ct2_results$`annotation 2`["type"])

plots3 <- plotData(ct2_donor3, ct2_results$`annotation 3`["type"])


all_plots <- list('donor 1' = plots1,
                  'donor 2' = plots2,
                  'donor 3' = plots3
                  )
saveRDS(all_plots, "../../newmanlab/Cytotrace 2/GSE109774_ct2_plots.rds")



